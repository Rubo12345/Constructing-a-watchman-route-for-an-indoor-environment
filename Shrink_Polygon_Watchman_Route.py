from typing import Final
import numpy as np
import matplotlib.pyplot as plt
import Shrink_Polygon_AGP

def shrink():
    SP = Shrink_Polygon_AGP

    # P = [(4,4),(8,4),(8,0),(14,-5),(20,0),(20,6),(15,6),(15,10),\
    #     (20,10),(20,14),(16,14),(16,16),(10,16),(10,14),(6,14),(6,16),(2,16)\
    #        ,(2,14),(0,14),(-5,7),(0,0),(2,-2),(4,0)]
    # P = [(120,30),(80,80),(140,80),(90,110),(40,80),\
    #            (54,56),(20,85),(40,110),(5,110),(-20,75),(20,60),(-30,60),\
    #            (-20,30),(30,0),(40,20),(80,0),(140,0),(160,20),(150,80),(130,70)]


    P = [(10, 36), (10, 31), (16, 29), (15, 22), (9, 22), (9, 13), (14, 9), (14, 13), (22, 13), (22, 4), (31, 5), \
        (25, 13), (25, 17), (35, 17), (35, 12), (30, 13), (34, 4), (42, 4), (42, -2), (48, -2), (48, 3), (54, 5), \
        (54, 15), (50, 15), (50, 22), (58, 22), (58, 33), (55, 33), (55, 29), (49, 37), (42, 30), (36, 30), (36, 36),\
        (41, 36), (40, 43), (31, 43), (31, 37), (16, 37), (16,31)]
    # P = [(66, -22), (52, 4), (65, 4), (66,-1), (78, -4), (81,3), (78, 17), (89,15), (101, 20), (101, 31), (87, 35),
    #      (87,45), (63,44), (75,36), (68,25), (58,45), (49,36), (54, 29), (44,29), (44,22), (60, 22),
    #      (60,15), (36,15), (36, -8)]
    # P = [(72 ,-13), (90 ,-27) ,(122 ,-36),(126 ,-20),(109 ,-21),(97 ,-2),(116 ,-2),(116 ,13),(134 ,13),(128 ,-7),(150 ,-7),(150 ,6),(167 ,6),(167 ,20),(153 ,20),(132 ,30),(132 ,40),(153 ,40),(153 ,51),(140 ,51),(140 ,69),(109, 69),(99 ,55),(110 ,55),(110 ,30),(98 ,25),(98 ,36),(84 ,36),(84 ,23),(75 ,23),(75 ,6)]
    # P = [(97, 80), (54, 80), (54, 40), (38, 40), (38 ,51), (10, 51), (10, 30), (25, 30), (26, 12), (2, 17), (2, 0), (19, -3), (34, -3), (29, -14), (54, -14), (54, -2), (76, -2), (76, -14), (110, -14), (110, -3), (88, 10), (88, 22), (119, 22), (119, 45), (86, 45), (86, 67), (116, 67), (116, 87), (97, 89)]
    # P = [(20, 140), (0, 140), (-50, 70), (0, 0), (20, -20), (40, 0), (40, 40), \
    #         (40, 40), (80, 40), (80, 0), (140, -50), (200, 0), (200, 60), (150, 60), (150, 100), \
    #         (200, 100), (200, 140), (160, 140), (160, 160), (100, 160), (100, 140), (60, 140), (60, 160), (20, 160)]
    P.reverse()   #already clockwise
    P.append(P[0])
    points = SP.shrink(P)
    points.append(points[0])
    Pb = SP.create_point_pair(P)
    Yx = SP.non_intersecting_diag(points,P,Pb)
    Yn = SP.mini_chk_pts(Pb,points,P,Yx)
    Final_Diagonals = SP.clean_up_final(Yn)
    Guards = SP.Guards(Final_Diagonals)
    return Guards, P


